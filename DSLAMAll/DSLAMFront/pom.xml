<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
						http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.imotion</groupId>
		<artifactId>DSLAMAll</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>DSLAMFront</artifactId>
	<packaging>war</packaging>
	<name>DSLAMFront</name>
	<url>http://maven.apache.org</url>

	<properties>
		<webappDirectory>${project.build.directory}/${project.artifactId}</webappDirectory>
		
		<gwt.ace.editor.version>0.0.2</gwt.ace.editor.version>
		<!-- Hibernate -->
		<hibernate.connection.url>jdbc:mysql://localhost:3306/dslamdbtest</hibernate.connection.url>
		<hibernate.connection.user>dslamuser</hibernate.connection.user>
		<hibernate.connection.password>dslampassword</hibernate.connection.password>
		<!-- Mongo -->
		<mongo.db>chronium-logs-db</mongo.db>
		<mongo.port>27017</mongo.port>
		<mongo.host>localhost</mongo.host>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${servletApi.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- GWT-BASE -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-codeserver</artifactId>
			<version>${gwt.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.gwt.google-apis</groupId>
			<artifactId>gwt-ajaxloader</artifactId>
			<version>1.1.0</version>
		</dependency>

		<dependency>
			<groupId>com.imotion.ace</groupId>
			<artifactId>ImotionGWTAceEditor</artifactId>
			<version>${gwt.ace.editor.version}</version>
		</dependency>
		<dependency>
			<groupId>com.imotion.ace</groupId>
			<artifactId>ImotionGWTAceEditor</artifactId>
			<version>${gwt.ace.editor.version}</version>
			<classifier>sources</classifier>
		</dependency>
		<dependency>
			<groupId>de.oscillation.gwt</groupId>
			<artifactId>goda-time</artifactId>
			<version>0.0.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- DSLAM -->
		<dependency>
			<groupId>com.imotion</groupId>
			<artifactId>DSLAMBom</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.imotion</groupId>
			<artifactId>DSLAMBusiness</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.imotion</groupId>
			<artifactId>DSLAMExecute</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.imotion</groupId>
			<artifactId>DSLAMExecute</artifactId>
			<version>${project.version}</version>
			<classifier>sources</classifier>
		</dependency>

		<!-- SELENE -->
		<dependency>
			<groupId>com.selene</groupId>
			<artifactId>SeleneBase</artifactId>
			<version>${selene.version}</version>
			<classifier>sources</classifier>
		</dependency>
		<dependency>
			<groupId>com.selene</groupId>
			<artifactId>Selene4GWT</artifactId>
			<version>${selene.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.googlecode.mgwt</groupId>
					<artifactId>mgwt</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.selene</groupId>
			<artifactId>Selene4GWT</artifactId>
			<version>${selene.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.googlecode.mgwt</groupId>
					<artifactId>mgwt</artifactId>
				</exclusion>
			</exclusions>
			<classifier>sources</classifier>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${validation-api.version}</version>
		</dependency>
<!-- 		JUST FOR DEBUGGING PROPOSALS -->		
<!-- 		<dependency> -->
<!-- 			<groupId>javax.validation</groupId> -->
<!-- 			<artifactId>validation-api</artifactId> -->
<!-- 			<version>${validation-api.version}</version> -->
<!-- 			<classifier>sources</classifier> -->
<!-- 		</dependency> -->
		
		<!-- UNIT TESTING -->
		
	</dependencies>

	<build>
		<!-- Compiled java classes and all the resources get dumped into target/${webappDirectory}/WEB-INF/classes 
			during the build -->
		<outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<!-- the java source files must be on the classpath during gwt:compile -->
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<!-- the java source files that override/emulate server-side classes 
					in the client must be on the classpath during gwt:compile -->
				<directory>src/main/super</directory>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>com.google.appengine</groupId>
				<artifactId>appengine-maven-plugin</artifactId>
				<version>${appengine.target.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${mavenJarPlugin.version}</version>
				<executions>
					<execution>
						<id>make-a-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>${mavenInstallPlugin.version}</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<packaging>jar</packaging>
							<artifactId>${project.artifactId}</artifactId>
							<groupId>${project.groupId}</groupId>
							<version>${project.version}</version>
							<file>
								${project.build.directory}/${project.artifactId}-${project.version}.jar
							</file>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${mavenSourcePlugin.version}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.version}</version>
				<executions>
					<execution>
						<!-- gwt:compile happens just before package phase -->
						<phase>gwt:compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<modules>
						<!-- Marketplace gwt module inherits Core gwt module therefore both will be gwt:compiled -->
						<module>com.imotion.dslam.front.business.desktop.DSLAMBusDesktopModule</module>
					</modules>
					<runTarget>DSLAMBusDesktopModule.jsp</runTarget>
					<!-- <appEngineVersion>${appengine.target.version}</appEngineVersion> -->
					<!-- TO AVOID : You will not be able to access files from your working 
						directory on the production server. -->
					<workDir>${webappDirectory}</workDir>
					<!-- tell the gwt plugin that the webapp source resides in src/main/webapp -->
					<webappDirectory>${webappDirectory}</webappDirectory>
					<!-- tell the gwt plugin that dev mode should be run using the webapp 
						that resides in target/${webappDirectory} -->
					<hostedWebapp>${webappDirectory}</hostedWebapp>
					<!-- Normally the gwt maven plugin executes dev mode using a builtin 
						jetty server. This config property instructs the gwt maven plugin to execute 
						dev mode using the jetty server supplied by the appengine sdk. -->
					<!-- <server>com.google.appengine.tools.development.gwt.AppEngineLauncher</server> -->
					<!-- <skip>${gwt.skipCompilation}</skip> -->
					<!-- Number of cores -->
					<localWorkers>4</localWorkers>
					<extraJvmArgs>-Xms768m -Xmx2048m -Dgwt.jjs.permutationWorkerFactory=com.google.gwt.dev.ThreadedPermutationWorkerFactory</extraJvmArgs>
				</configuration>
			</plugin>
			<plugin>
				<!-- Copies static web files from src/main/webapp to target/${webappDirectory} -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${mavenWarPlugin.version}</version>
				<executions>
					<execution>
						<!-- the exploded goal gets executed during compile phase -->
						<phase>compile</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- the exploded war structure ends up in target/${webappDirectory} -->
					<webappDirectory>${webappDirectory}</webappDirectory>
					<dependentWarExcludes></dependentWarExcludes>

<!-- 					<packagingExcludes>	 -->
<!-- 					    		WEB-INF/lib/*-sources.jar,  -->
<!-- 					    		WEB-INF/lib/gwt-dev-*.jar,  -->
<!-- 					   			WEB-INF/lib/gwt-user-*.jar, -->
<!-- 					   			WEB-INF/lib/gwt-maps-*.jar, -->
<!-- 					   			WEB-INF/lib/gwtphonegap-*.jar -->
<!-- 					</packagingExcludes> -->
					<!-- <packagingExcludes>WEB-INF/deploy/**, WEB-INF/lib/gwt-dev-2.5.1.jar, 
						com.imotion.saboreando.front.business.desktop.entrypoint.BusinessDesktopModule/**</packagingExcludes> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>${mavenEclipsePlugin.version}</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<buildOutputDirectory>target/${project.artifactId}/WEB-INF/classes</buildOutputDirectory>
					<projectnatures>
						<projectnature>com.google.appengine.eclipse.core.gaeNature</projectnature>
						<projectnature>org.eclipse.jdt.core.javanature</projectnature>
						<projectnature>com.google.gdt.eclipse.core.webAppNature</projectnature>
						<nature>com.google.gwt.eclipse.core.gwtNature</nature>
					</projectnatures>
					<buildcommands>
						<buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
						<buildcommand>com.google.gdt.eclipse.core.webAppProjectValidator</buildcommand>
						<buildcommand>com.google.appengine.eclipse.core.projectValidator</buildcommand>
						<buildcommand>com.google.gwt.eclipse.core.gwtProjectValidator</buildcommand>
					</buildcommands>
					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
						<classpathContainer>com.google.gwt.eclipse.core.GWT_CONTAINER</classpathContainer>
					</classpathContainers>
					<excludes>
						<exclude>com.google.gwt:gwt-servlet</exclude>
						<exclude>com.google.gwt:gwt-user</exclude>
						<exclude>com.google.gwt:gwt-dev</exclude>
						<exclude>javax.validation:validation-api</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>eclipse</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${webappDirectory}/WEB-INF/lib</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-war-plugin</artifactId>
										<versionRange>${mavenWarPlugin.version}</versionRange>
										<goals>
											<goal>exploded</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<profile>
			<id>dslam</id>
			<properties>
<!-- 			    Hibernate -->
				<hibernate.connection.url>jdbc:mysql://us-cdbr-cb-east-01.cleardb.net:3306/cb_dslamdb</hibernate.connection.url>
				<hibernate.connection.user>b3824f64a6f0d8</hibernate.connection.user>
				<hibernate.connection.password>e5a71044</hibernate.connection.password>
<!-- 				Mongo (TODO) -->
				<mongo.db>chronium-logs-db</mongo.db>
				<mongo.port>27017</mongo.port>
				<mongo.host>localhost</mongo.host>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>

		<profile>
			<id>chronium</id>
			<properties>
<!-- 				Hibernate -->
				<hibernate.connection.url>jdbc:mysql://us-cdbr-cb-east-01.cleardb.net:3306/cb_chronium-io-db</hibernate.connection.url>
				<hibernate.connection.user>ba2513e61bbc0e</hibernate.connection.user>
				<hibernate.connection.password>922d36c5</hibernate.connection.password>
<!-- 				Mongo (TODO)  -->
				<mongo.db>chronium-logs-db</mongo.db>
				<mongo.port>27017</mongo.port>
				<mongo.host>localhost</mongo.host>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
	</profiles>
	
</project>
